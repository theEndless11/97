"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=handler;var _mongoose=_interopRequireDefault(require("mongoose")),_db=require("../utils/db");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var postSchema=new _mongoose.default.Schema({message:String,timestamp:Date,username:String,sessionId:String,likes:{type:Number,default:0},dislikes:{type:Number,default:0},likedBy:[String],dislikedBy:[String],comments:[{username:String,comment:String,timestamp:Date}]}),Post=_mongoose.default.model("Post",postSchema);function handler(t,s){var r,a,n,o,u,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.body,a=r.postId,n=r.username,o=r.action,u=r.comment,e.next=3,regeneratorRuntime.awrap((0,_db.connectToDatabase)());case 3:if("POST"===t.method)return e.prev=4,e.next=7,regeneratorRuntime.awrap(Post.findById(a));e.next=46;break;case 7:if(i=e.sent){e.next=10;break}return e.abrupt("return",s.status(404).json({message:"Post not found"}));case 10:if("like"!==o){e.next=19;break}if(i.dislikedBy.includes(n))return e.abrupt("return",s.status(400).json({message:"You cannot like a post you have disliked"}));e.next=13;break;case 13:if(i.likedBy.includes(n))return e.abrupt("return",s.status(400).json({message:"You have already liked this post"}));e.next=15;break;case 15:i.likes+=1,i.likedBy.push(n),e.next=35;break;case 19:if("dislike"!==o){e.next=28;break}if(i.likedBy.includes(n))return e.abrupt("return",s.status(400).json({message:"You cannot dislike a post you have liked"}));e.next=22;break;case 22:if(i.dislikedBy.includes(n))return e.abrupt("return",s.status(400).json({message:"You have already disliked this post"}));e.next=24;break;case 24:i.dislikes+=1,i.dislikedBy.push(n),e.next=35;break;case 28:if("comment"!==o){e.next=34;break}if(u&&u.trim()){e.next=31;break}return e.abrupt("return",s.status(400).json({message:"Comment cannot be empty"}));case 31:i.comments.push({username:n,comment:u,timestamp:new Date}),e.next=35;break;case 34:return e.abrupt("return",s.status(400).json({message:"Invalid action type"}));case 35:return e.next=37,regeneratorRuntime.awrap(i.save());case 37:s.json(i),e.next=44;break;case 40:e.prev=40,e.t0=e.catch(4),console.error(e.t0),s.status(500).json({message:"Error updating post",error:e.t0});case 44:e.next=47;break;case 46:s.status(405).json({message:"Method Not Allowed"});case 47:case"end":return e.stop()}},null,null,[[4,40]])}
//# sourceMappingURL=editPost.min.js.map
