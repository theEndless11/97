"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=handler;var _mongoose=_interopRequireDefault(require("mongoose")),_db=require("../utils/db");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var sessionExpirationTime=36e5,postSchema=new _mongoose.default.Schema({message:String,timestamp:Date,username:String,sessionId:String}),Post=_mongoose.default.model("Post",postSchema);function handler(t,r){var s,n,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap((0,_db.connectToDatabase)());case 2:if("DELETE"===t.method)return e.prev=3,s=Date.now(),e.next=7,regeneratorRuntime.awrap(Post.find({timestamp:{$lte:new Date(s-sessionExpirationTime)}}));e.next=25;break;case 7:if(0<(n=e.sent).length)return e.next=11,regeneratorRuntime.awrap(Post.deleteMany({_id:{$in:n.map(function(e){return e._id})}}));e.next=16;break;case 11:o=e.sent,console.log("".concat(o.deletedCount," expired posts deleted.")),r.status(200).json({message:"Expired posts have been deleted successfully."}),e.next=17;break;case 16:r.status(200).json({message:"No expired posts found."});case 17:e.next=23;break;case 19:e.prev=19,e.t0=e.catch(3),console.error("Error clearing history:",e.t0),r.status(500).json({message:"Error clearing history",error:e.t0});case 23:e.next=26;break;case 25:r.status(405).json({message:"Method Not Allowed"});case 26:case"end":return e.stop()}},null,null,[[3,19]])}
//# sourceMappingURL=clearHistory.min.js.map
