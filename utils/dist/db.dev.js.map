{"version":3,"sources":["db.js"],"names":["connectToDatabase","mongoose","connections","readyState","connect","process","env","MONGODB_URI","useNewUrlParser","useUnifiedTopology","console","log","error","Error"],"mappings":";;;;;;;AAAA;;;;AAEO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA,eACzBC,qBAASC,WAAT,CAAqB,CAArB,EAAwBC,UADC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA,0CAMnBF,qBAASG,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,WAA7B,EAA0C;AAC5CC,YAAAA,eAAe,EAAE,IAD2B;AAE5CC,YAAAA,kBAAkB,EAAE;AAFwB,WAA1C,CANmB;;AAAA;AAUzBC,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAVyB;AAAA;;AAAA;AAAA;AAAA;AAYzBD,UAAAA,OAAO,CAACE,KAAR,CAAc,8BAAd;AAZyB,gBAanB,IAAIC,KAAJ,CAAU,2BAAV,CAbmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B","sourcesContent":["import mongoose from 'mongoose';\r\n\r\nexport const connectToDatabase = async () => {\r\n    if (mongoose.connections[0].readyState) {\r\n        return; // Use existing connection\r\n    }\r\n\r\n    try {\r\n        await mongoose.connect(process.env.MONGODB_URI, {\r\n            useNewUrlParser: true,\r\n            useUnifiedTopology: true,\r\n        });\r\n        console.log('MongoDB connected');\r\n    } catch (error) {\r\n        console.error('Error connecting to MongoDB:', error);\r\n        throw new Error('MongoDB connection failed');\r\n    }\r\n};"],"file":"db.dev.js"}